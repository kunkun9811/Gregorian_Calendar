{"changed":false,"filter":false,"title":"month.cpp","tooltip":"/src/month.cpp","value":"#include <iostream>\n\n#include \"month.hpp\"\n#include \"year.hpp\"\n\nMonth::Month(const int &yearNum, const int &monthNum){\n\tyearNumber = yearNum;\n\tmonthNumber = monthNum;\n\t\n\tif(monthNum == 1){\n\t\tdays.resize(31);\t\n\t}\n\telse if(monthNum == 2){\n\t\tif(isLeapYear()){\n\t\t\tdays.resize(29);\t\n\t\t}\n\t\telse days.resize(28);\n\t}\n\telse if(monthNum == 3){\n\t\tdays.resize(31);\t\n\t}\n\telse if(monthNum == 4){\n\t\tdays.resize(30);\t\n\t}\n\telse if(monthNum == 5){\n\t\tdays.resize(31);\t\n\t}\n\telse if(monthNum == 6){\n\t\tdays.resize(30);\t\n\t}\n\telse if(monthNum == 7){\n\t\tdays.resize(31);\t\n\t}\n\telse if(monthNum == 8){\n\t\tdays.resize(31);\t\n\t}\n\telse if(monthNum == 9){\n\t\tdays.resize(30);\t\n\t}\n\telse if(monthNum == 10){\n\t\tdays.resize(31);\t\n\t}\n\telse if(monthNum == 11){\n\t\tdays.resize(30);\t\n\t}\n\telse if(monthNum == 12){\n\t\tdays.resize(31);\t\n\t}\n\telse{\n\t\tcout << \"Invalid Month Number\" << endl;\n\t}\n\n\tfor(int i = 0; i < days.size(); i++){\n\t\tdays.at(i) = new Day(yearNumber, monthNumber, i + 1);\n\t}\n}\n\nDay* Month::getDay(const int &dayNum) const{\n\tDay* theDay = days.at(dayNum - 1);\n\treturn theDay;\n}\n\nbool Month::isLeapYear() const {\n\tif(((yearNumber % 4 == 0) && (yearNumber % 100 != 0)) || (yearNumber % 400 == 0)) return true;\n\telse return false;\n}","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":23,"column":2},"end":{"row":23,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1554017526000}